extends ../app_layout.pug

include ./nav/nav-visit.pug

block main
    main
        .row
            .col.s10.offset-s1.m8.offset-m2.l6.offset-l3
                h4.green-text.text-accent-4.margin-t-3.reduce-h4-3 Create your account
                h5.blue-grey-text.text-lighten-4 Start creating events right after this quick step.
            .col.s10.offset-s1.m8.offset-m2.l6.offset-l3
                form.margin-t-3(action="/signup", method='post')
                    label(for="email-account").margin-t-5.blue-grey-text What is your email address?
                    input#email-account.validate(type="email", name="email-account", placeholder="example@gmail.com", autofocus)

                    label(for="password-account").blue-grey-text Choose a password
                    input#password-account(type="password", name="password-account", placeholder="**********")
                    #password-helper.row.blue-grey-text.text-lighten-1.hide
                        span Your password should
                        ul: small: small
                            li contain 6 to 20 characters
                            li contain lowercase and uppercase letters
                            li contain a number
                            li not contain any special character

                    label(for="password2-account").blue-grey-text Confirm your password
                    input#password2-account(type="password", name="password2-account", placeholder="**********")
                    button#create-account.btn.green.accent-4.waves-effect.waves-light.margin-t-2(disabled)
                      | Create Account 
                      i.material-icons.right send
                    p.em0p7: a(href="/signin") Have an account already? Click here    

block scripts
    script(src='bower_components/jquery/dist/jquery.min.js')    
    script(src="bower_components/localforage/dist/localforage.min.js")
    script(src='bower_components/materialize/dist/js/materialize.min.js')
    script(src='js/navinit.js')
    script.
        $(document).ready(function () {
            $('.tooltipped').each(function(index, element) {
                var span = $('#' + $(element).attr('data-tooltip-id') + '>span:first-child');
                span.before($(element).attr('data-tooltip'));
                span.remove();
            });
            var email = {};
            email.elem = $('#email-account');

            var password = {};
            password.elem = $('#password-account');
            password.value = '';
            password.isValid = false;

            var passwordHelper = {};
            passwordHelper.elem = $('#password-helper');

            var passwordConfirm = {};
            passwordConfirm.elem = $('#password2-account');
            passwordConfirm.value = '';
            passwordConfirm.isValid = false;

            var createAccountButton = {};
            createAccountButton.elem = $('#create-account');

            var passwordValidation = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;

            var areInputsAllValid = false;
            email.elem.on('keyup', function() {
                enableCreateAccountButton(email,password,passwordConfirm,createAccountButton, areInputsAllValid);
            });

            password.elem.on('keyup', function() {
               isValidPassword(password); 
               enableCreateAccountButton(email,password,passwordConfirm,createAccountButton, areInputsAllValid);
               shouldShowHelper(password,passwordHelper);
             });
            password.elem.on('focus', function() {
               shouldShowHelper(password,passwordHelper);
             });
            password.elem.on('blur', function() {
               passwordHelper.elem.addClass('hide');
             });
             passwordConfirm.elem.on('keyup', function() {
               isValidPassword(passwordConfirm); 
               isPasswordConfirmMatching(password,passwordConfirm);
               enableCreateAccountButton(email,password,passwordConfirm,createAccountButton, areInputsAllValid);
             });

            function isValidPassword(pw) {
                pw.value = pw.elem.val();
                pw.isValid = passwordValidation.test(pw.value);
                if (!pw.value) {
                    pw.elem.removeClass()
                 }
                else if (pw.isValid) {
                    pw.elem.removeClass('invalid');
                    pw.elem.addClass('valid');
                }
                else {
                    pw.elem.removeClass('valid');
                    pw.elem.addClass('invalid');
                }
            }

            function isPasswordConfirmMatching(pw1,pw2) {
                if (!pw2.isValid) {
                    return;
                }
                else if (pw2.isValid && pw1.value !== pw2.value) {
                    pw2.elem.removeClass('valid');
                    pw2.elem.addClass('invalid');
                }
                else if (pw2.isValid && pw1.value === pw2.value) {
                    pw2.elem.removeClass('invalid');
                    pw2.elem.addClass('valid');
                }
            }

            function enableCreateAccountButton(mail,pw1,pw2,accountButton,areInputsValid) {
               areInputsValid = mail.elem.hasClass('valid') && pw1.elem.hasClass('valid') && pw2.elem.hasClass('valid'); 
               if (!areInputsValid) {
                    accountButton.elem.prop('disabled', true);   
                } 
                else {
                    accountButton.elem.prop('disabled', false);   
                }
            }

            function shouldShowHelper(pw,helper) {
                if (!pw.elem.hasClass('valid')) {
                    helper.elem.removeClass('hide');    
                }
                else {
                    helper.elem.addClass('hide');
                }
            }
        });
